import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as a,f as t,a as i,g as l}from"./app-8UnjWBrN.js";const n={},h=i("h1",{id:"数据类型",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#数据类型"},[i("span",null,"数据类型")])],-1),d=i("p",null,"Solidity支持多种数据类型，主要分为以下几类：",-1),r=l(`<h2 id="布尔类型" tabindex="-1"><a class="header-anchor" href="#布尔类型"><span>布尔类型</span></a></h2><p><code>bool</code>，只有 <code>true</code> 和 <code>false</code> 两个值。</p><div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" data-title="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> isTrue </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="整数类型" tabindex="-1"><a class="header-anchor" href="#整数类型"><span>整数类型</span></a></h2><p>分为有符号整数（<code>int</code>）和无符号整数（<code>uint</code>），后者不能为负值。整数类型的长度可以是8到256位，间隔为8位。</p><div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" data-title="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">uint8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> smallNumber </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 255</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">int256</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> largeNumber </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="映射类型" tabindex="-1"><a class="header-anchor" href="#映射类型"><span>映射类型</span></a></h2><p><code>mapping(keyType =&gt; valueType)</code>：存储键值对的集合，其中 <code>keyType</code> 是键的类型，<code>valueType</code> 是值的类型。常用于存储关联数据。</p><div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" data-title="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   mapping</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">uint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> addressMap;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="地址类型" tabindex="-1"><a class="header-anchor" href="#地址类型"><span>地址类型</span></a></h2><p><code>address</code>，用于存储以太坊账户地址。</p><div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" data-title="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">  address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> myAddress </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x1234567890123456789012345678901234567890</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="固定大小的字节数组" tabindex="-1"><a class="header-anchor" href="#固定大小的字节数组"><span>固定大小的字节数组</span></a></h2><p><code>bytes1</code> 到 <code>bytes32</code>，用于存储固定长度的二进制数据。</p><div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" data-title="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">bytes32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Hello, world!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="动态大小的字节数组" tabindex="-1"><a class="header-anchor" href="#动态大小的字节数组"><span>动态大小的字节数组</span></a></h2><p><code>bytes</code>，用于存储可变长度的二进制数据。</p><div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" data-title="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Hello, world!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串"><span>字符串</span></a></h2><p><code>string</code>，用于存储文本数据。</p><div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" data-title="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> greeting </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Hello, world!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组"><span>数组</span></a></h2><p>支持固定长度和动态长度数组，元素类型可以是任意数据类型。</p><div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" data-title="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">uint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] dynamicArray; </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 动态长度数组</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">uint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] fixedArray; </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 固定长度数组</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="结构体" tabindex="-1"><a class="header-anchor" href="#结构体"><span>结构体</span></a></h2><p><code>struct</code>，用于定义自定义的数据结构。</p><div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" data-title="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">    string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> name;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">    uint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> age;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="枚举" tabindex="-1"><a class="header-anchor" href="#枚举"><span>枚举</span></a></h2><p><code>enum</code>，用于定义枚举类型。</p><div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" data-title="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> State</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Active</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Inactive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>这一节介绍了 Solidity 支持的基本数据类型，包括布尔类型、整数类型、地址类型、固定大小的字节数组、动态大小的字节数组、字符串、数组、结构体、枚举、映射类型等。 下一节我们通过几个例子来学习 Solidity 的这几种数据类型。</p>`,32);function k(p,o){return e(),a("div",null,[h,d,t(" more "),r])}const y=s(n,[["render",k],["__file","1-5.数据类型.html.vue"]]),B=JSON.parse('{"path":"/solidity/1-5.%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html","title":"5.Solidity 数据类型","lang":"zh-CN","frontmatter":{"title":"5.Solidity 数据类型","date":"2024-09-03T00:00:00.000Z","categories":["Solidity"],"author":"花千树","article":false,"description":"Solidity支持多种数据类型，主要分为以下几类：","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/solidity/1-5.%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"花千树"}],["meta",{"property":"og:title","content":"5.Solidity 数据类型"}],["meta",{"property":"og:description","content":"Solidity支持多种数据类型，主要分为以下几类："}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-05T15:29:18.000Z"}],["meta",{"property":"article:author","content":"花千树"}],["meta",{"property":"article:published_time","content":"2024-09-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-05T15:29:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"5.Solidity 数据类型\\",\\"description\\":\\"Solidity支持多种数据类型，主要分为以下几类：\\"}"]]},"headers":[{"level":2,"title":"布尔类型","slug":"布尔类型","link":"#布尔类型","children":[]},{"level":2,"title":"整数类型","slug":"整数类型","link":"#整数类型","children":[]},{"level":2,"title":"映射类型","slug":"映射类型","link":"#映射类型","children":[]},{"level":2,"title":"地址类型","slug":"地址类型","link":"#地址类型","children":[]},{"level":2,"title":"固定大小的字节数组","slug":"固定大小的字节数组","link":"#固定大小的字节数组","children":[]},{"level":2,"title":"动态大小的字节数组","slug":"动态大小的字节数组","link":"#动态大小的字节数组","children":[]},{"level":2,"title":"字符串","slug":"字符串","link":"#字符串","children":[]},{"level":2,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":2,"title":"结构体","slug":"结构体","link":"#结构体","children":[]},{"level":2,"title":"枚举","slug":"枚举","link":"#枚举","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1725463069000,"updatedTime":1725550158000,"contributors":[{"name":"huaqianshu","email":"huaqianshu.lm@gmail.com","commits":1}]},"readingTime":{"minutes":1.42,"words":425},"filePathRelative":"solidity/1-5.数据类型.md","localizedDate":"2024年9月3日","excerpt":"\\n<p>Solidity支持多种数据类型，主要分为以下几类：</p>\\n","autoDesc":true}');export{y as comp,B as data};
