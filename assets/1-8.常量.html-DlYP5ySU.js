import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as n,a as l,g as t}from"./app-Bm8950XS.js";const e={},h=l("p",null,"在 Solidity 中，常量（constants） 是指那些在合约部署时已经确定并且在整个合约生命周期中不会改变的变量。常量可以用于存储不会改变的数值或数据，这些值在智能合约中可以被频繁使用。使用常量的主要优势在于，它们不会占用 storage，从而减少了合约的 gas 消耗。",-1),p=t(`<h2 id="定义常量" tabindex="-1"><a class="header-anchor" href="#定义常量"><span>定义常量</span></a></h2><p>常量通过 <code>constant</code>关键字来定义。常量可以是整数、布尔值、地址、字符串等。</p><p>常量的定义语法：</p><div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" data-title="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">type</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> constant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> constant_name </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> value;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>type：常量的数据类型，如 uint, address, string, bool 等。</li><li>constant：定义常量的关键字。</li><li>constant_name：常量的名称，通常使用大写字母来表示常量名称。</li><li>value：常量的值，必须在声明时赋值。</li></ul><h2 id="常量的使用" tabindex="-1"><a class="header-anchor" href="#常量的使用"><span>常量的使用</span></a></h2><p>常量通常用于不会改变的数值，比如单位转换、手续费、固定地址等。在 Solidity 中使用常量可以提升合约的效率，因为常量在合约编译时会直接嵌入到代码中，减少了运行时的存储和计算开销。</p><p>示例：</p><div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" data-title="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">pragma</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> solidity</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ^0.8.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">contract</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ConstantsExample</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 定义整数常量</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">    uint256</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> constant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MY_CONSTANT </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 定义地址常量</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">    address</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> constant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> OWNER_ADDRESS </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x1234567890123456789012345678901234567890</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 定义字符串常量</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">    string</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> constant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> WELCOME_MESSAGE </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Hello, Solidity!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 使用常量</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getConstantValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> pure</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> returns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">uint256</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MY_CONSTANT;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常量的优势" tabindex="-1"><a class="header-anchor" href="#常量的优势"><span>常量的优势</span></a></h2><p>使用常量在 Solidity 中有多个优势：</p><ul><li>节省 gas：常量直接嵌入到代码中，减少了对存储的依赖，因此在执行时不需要访问 storage，降低了 gas 消耗。</li><li>不可修改：常量在合约中是不可修改的，这避免了无意的更改，增加了代码的安全性和可读性。</li><li>提高效率：因为常量的值在编译时已经确定，使用常量比状态变量效率更高。</li></ul><h2 id="常量的限制" tabindex="-1"><a class="header-anchor" href="#常量的限制"><span>常量的限制</span></a></h2><p>常量的值必须在声明时设定，不能在运行时或函数内赋值。 一旦定义，常量的值在合约的整个生命周期内都无法更改。</p><h2 id="实际应用场景" tabindex="-1"><a class="header-anchor" href="#实际应用场景"><span>实际应用场景</span></a></h2><p>常量在智能合约中有多种应用场景，例如：</p><ul><li>手续费设置：在去中心化应用（DApp）中，手续费率通常是固定的，可以使用常量来表示。</li><li>单位转换：在处理金额时，常量可用于表示单位转换的系数，比如以太币和 wei 之间的转换。</li><li>预定义的地址：如果某些特定的地址在合约中是固定的，可以使用常量来存储。</li></ul><p>示例应用场景：</p><div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" data-title="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">pragma</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> solidity</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ^0.8.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">contract</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> FeeContract</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 手续费率常量（千分之五）</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">    uint256</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> constant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FEE_PERCENTAGE </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 固定接收手续费的地址</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">    address</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> constant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FEE_RECEIVER </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0x1234567890123456789012345678901234567890</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 计算手续费</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> calculateFee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">uint256</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> amount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> pure</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> returns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">uint256</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (amount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FEE_PERCENTAGE) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 发送手续费</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sendFee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">uint256</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> amount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">        uint256</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> fee </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> calculateFee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(amount);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        payable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FEE_RECEIVER).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">transfer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(fee);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子中，<code>FEE_PERCENTAGE</code> 和 <code>FEE_RECEIVER</code> 是常量，用于表示固定的手续费比例和接收手续费的地址。使用常量可以确保这些值不会被意外修改，并减少 gas 成本。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>这一节介绍了 Solidity 中的常量，常量是指在 Solidity 合约中声明后不可更改的变量，使用 <code>constant</code> 关键字定义。 常量的主要优势包括节省 gas、提高代码安全性和效率。 常量适用于存储固定值，如手续费率、固定地址、单位转换等。 通过合理使用常量，可以提高智能合约的性能并降低 gas 成本。</p>`,22);function k(d,r){return s(),a("div",null,[h,n(" more "),p])}const o=i(e,[["render",k],["__file","1-8.常量.html.vue"]]),g=JSON.parse('{"path":"/solidity/1-8.%E5%B8%B8%E9%87%8F.html","title":"8.常量","lang":"zh-CN","frontmatter":{"title":"8.常量","date":"2024-09-08T00:00:00.000Z","categories":["Solidity"],"author":"花千树","description":"在 Solidity 中，常量（constants） 是指那些在合约部署时已经确定并且在整个合约生命周期中不会改变的变量。常量可以用于存储不会改变的数值或数据，这些值在智能合约中可以被频繁使用。使用常量的主要优势在于，它们不会占用 storage，从而减少了合约的 gas 消耗。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/solidity/1-8.%E5%B8%B8%E9%87%8F.html"}],["meta",{"property":"og:site_name","content":"花千树"}],["meta",{"property":"og:title","content":"8.常量"}],["meta",{"property":"og:description","content":"在 Solidity 中，常量（constants） 是指那些在合约部署时已经确定并且在整个合约生命周期中不会改变的变量。常量可以用于存储不会改变的数值或数据，这些值在智能合约中可以被频繁使用。使用常量的主要优势在于，它们不会占用 storage，从而减少了合约的 gas 消耗。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T14:43:39.000Z"}],["meta",{"property":"article:author","content":"花千树"}],["meta",{"property":"article:published_time","content":"2024-09-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T14:43:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8.常量\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-09-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-11T14:43:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"花千树\\"}]}"]]},"headers":[{"level":2,"title":"定义常量","slug":"定义常量","link":"#定义常量","children":[]},{"level":2,"title":"常量的使用","slug":"常量的使用","link":"#常量的使用","children":[]},{"level":2,"title":"常量的优势","slug":"常量的优势","link":"#常量的优势","children":[]},{"level":2,"title":"常量的限制","slug":"常量的限制","link":"#常量的限制","children":[]},{"level":2,"title":"实际应用场景","slug":"实际应用场景","link":"#实际应用场景","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1726065819000,"updatedTime":1726065819000,"contributors":[{"name":"huaqianshu","email":"huaqianshu.lm@gmail.com","commits":1}]},"readingTime":{"minutes":3.03,"words":910},"filePathRelative":"solidity/1-8.常量.md","localizedDate":"2024年9月8日","excerpt":"<p>在 Solidity 中，常量（constants） 是指那些在合约部署时已经确定并且在整个合约生命周期中不会改变的变量。常量可以用于存储不会改变的数值或数据，这些值在智能合约中可以被频繁使用。使用常量的主要优势在于，它们不会占用 storage，从而减少了合约的 gas 消耗。</p>\\n","autoDesc":true}');export{o as comp,g as data};
